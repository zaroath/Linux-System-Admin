ls -l Desktop/ - "use tab for auto fill"
ls -l
man ls
ls --help
help
apropos list
cd Documents/
pwd
cd Exercise\ Files or cd "Exercise Files"
ls -R departments/
cd departments/hr/policies/
cd ..
cd ../../finance/documents/
cd -
mkdir newfolder
mkdir departments/customerservice [creating a new folder named customerservice]
mkdir departments/customerservice/documents departments/customerservice/cases departments/customerservice/awards [creating multiple folders at same time]
mkdir -p departments/legal/contracts [creating folder within a folder]
rmdir departments/legal/contracts/  [deleting a folder]
rmdir departments/legal/
rmdir customerservice/
rmdir: failed to remove 'customerservice/': Directory not empty [can delete an empty folder only]
cp poems.txt poems2.txt
cp simple_data.txt departments/hr/employee\ info/ [copy simple_data.txt to employee info folder]
mv poems2.txt departments/marketing/  [moving peoms2.txt to marketing folder]
mv departments/marketing/poems2.txt departments/marketing/literature.txt [changing the name poems2.txt as literature.txt ]
mv departments/marketing/literature.txt  .  [return literature.txt to current directory using "."]
mv *.txt departments/marketing/  [move all .txt file into marketing folder]
mv departments/marketing/* .    [return all files back to current directory using "."]
rm literature.txt	[delete literature.txt]
rm departments/customerservice/ [rm: cannot remove 'departments/customerservice/': Is a directory]
rm -r departments/customerservice/	[delete folder and the folders inside it as well]
find . -name "poe*"	[find files,docs starting with poe]
find . -name "*d*"	[find files,docs which has letter d]
~/Documents/ -name "*d*"
[ahmed@rhhost1-localnet-com Exercise Files]$ ls /root	ls: cannot open directory '/root': Permission denied
sudo ls /root
sudo -k		[give up super user previllages]
sudo -s		[change permenantly to super user ]
ls -l test.sh
stat test.sh 
chmod 644 test.sh	[changing permissions 6 = r+w, 4 =r]
./test.sh		[run the executable file]
chmod 755 test.sh	[changing permissions 7 means full permission to user 7 = rwx]
chmod a-x test.sh 	[remove executing permission for user,group and other]
bash test.sh		[can run from bash after changing the permission]
cat test.sh		[read the file]
chmod u-r test.sh	[restricting reading permission]
chmod 244 test.sh	[only write permission for user]
touch newfile
stat newfile
nano test.sh
sudo chown root test.sh
sudo chown ahmed test.sh
ln -s poems.txt writing.txt	[creating a softlink named writing.txt]
cat writing.txt
ln poems.txt words.txt		[creating a hard link]
echo "greetings"
echo "greetings" | wc
echo "greetings from rocky linux command line" | wc
cat poems.txt 	[read the text in poems.txt]
head poems.txt
tail poems.txt
head -n5 peoms.txt
tail -n3 poems.txcat poems.txt | cat -n | tail -n5
cat poems.txt | tail -n5 | cat -n
less poems.txt
cat poems.txt | less
grep "the" poems.txt		[find 'the' in the poems file]
grep -n  "the" poems.txt	[find 'the' in the poems file and show the line number]
grep -in  "the" poems.txt	[find 'the' or 'The' in the poems file and show the line number ]
grep -vi  "the" poems.txt	[omit lines which consists 'the']
grep -E "[hijk]" poems.txt	[find letter 'h','i','j','k']
grep -E "\w{6,}" poems.txt	[find words larger than 6 characters]
awk '{print $2}' simple_data.txt	[print the 2nd column in the simple_data.txt]
awk '{print $2 "\t" $1}' simple_data.txt	[print the 2nd & 1st column respectively in the simple_data.txt]
awk '{print $2 "\t" $1}' simple_data.txt | sort -n	[print the 2nd & 1st column respectively in the simple_data.txt and sort in numerical order]
sed s/Orange/Red/ simple_data.txt		[change the 'Orange' as 'Red' in Team column]
sort simple_data.txt 		[sort the contents in simple_data.txt]
sort -k2 simple_data.txt	[sort the contents in simple_data.txt by column 2(ID)]
sort -k2 -n simple_data.txt	[sort the contents in simple_data.txt by column 2(ID) in numerical order]
sort -u dupes.txt		[sort by not showing duplicates]
tac simple_data.txt
rev simple_data.txt 
vi	[opne vim]
vi poems.txt [open a document in vim]
i	[insert at cursor location]
I	[Insert at beginning of line]
o	[Insert on following line]
Esc		[enter command mode]
Esc : w		[save file]
Esc : wq	[save and exit]
Esc : q!	[exit without saving]
tar -cvf myfiles.tar Exercise\ Files/	[creating tar file which includes all the files in the Exercise files]
tar -cvaf myfiles.tar.gz Exercise\ Files/	[creating tar file which includes all the files in the Exercise files with gzip compression]
tar -caf myfiles.tar.bz2 Exercise\ Files	[creating tar file which includes all the files in the Exercise files with bzip compression]
mkdir unpack1	[creating a folder unpack1]
mv myfiles.tar.bz2 unpack1	[move myfiles.tar.bz2 to unpack1]
cd unpack1/
tar -xf myfiles.tar.bz2		[extract the myfiles.tar.bz2]
mkdir unpack2
tar -xf myfiles.tar.gz -C unpack2	[extract myfiles.tar.gz in upack2 folder]
zip -r  exfiles.zip Exercise\ Files/	[create zip file for Exercise files as exfiles.zip]
mkdir unpack3
mv exfiles.zip  unpack3
cd unpack3
unzip exfiles.zip
mkdir unpack4
unzip unpack3/exfiles.zip -d unpack4	[unzip exfiles.zip into unpack4 file]

